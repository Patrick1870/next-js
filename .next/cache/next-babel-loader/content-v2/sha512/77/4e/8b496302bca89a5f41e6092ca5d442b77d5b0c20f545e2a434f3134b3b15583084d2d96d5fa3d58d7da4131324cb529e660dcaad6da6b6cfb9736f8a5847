{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/next-js/pages/article/[id]/index.js\";\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nconst Article = ({\n  article\n}) => {\n  //const router = useRouter()\n  //const { id } = router.query\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: article.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n}; // call when request is made\n\n\nexport const getServerSideProps = async serverResponse => {\n  const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${serverResponse.params.id}`);\n  const article = await res.json();\n  return {\n    props: {\n      article\n    }\n  };\n};\nexport default Article;","map":{"version":3,"sources":["/Users/user/Desktop/next-js/pages/article/[id]/index.js"],"names":["Link","useRouter","Article","article","title","body","getServerSideProps","serverResponse","res","fetch","params","id","json","props"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAAQC,SAAR,QAAwB,aAAxB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC9B;AACA;AAEA,sBACC;AAAA,4BACC;AAAA,gBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAID,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CAZD,C,CAcA;;;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,cAAP,IAA0B;AAC3D,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,8CAA6CF,cAAc,CAACG,MAAf,CAAsBC,EAAG,EAAxE,CAAvB;AACA,QAAMR,OAAO,GAAG,MAAMK,GAAG,CAACI,IAAJ,EAAtB;AAEA,SAAO;AACNC,IAAAA,KAAK,EAAE;AACNV,MAAAA;AADM;AADD,GAAP;AAKA,CATM;AAWP,eAAeD,OAAf","sourcesContent":["import Link from 'next/link';\nimport {useRouter} from 'next/router';\n\nconst Article = ({article}) => {\n\t//const router = useRouter()\n\t//const { id } = router.query\n\n\treturn (\n\t\t<span>\n\t\t\t<h1>{article.title}</h1>\n\t\t\t<p>{article.body}</p>\n\t\t\t<br />\n\t\t\t<Link href=\"/\">Go back</Link>\n\t\t</span>\n\t)\n}\n\n// call when request is made\nexport const getServerSideProps = async (serverResponse) => {\n\tconst res = await fetch(`https://jsonplaceholder.typicode.com/posts/${serverResponse.params.id}`)\n\tconst article = await res.json();\n\n\treturn {\n\t\tprops: { \n\t\t\tarticle\n\t\t}\n\t}\n}\n\nexport default Article"]},"metadata":{},"sourceType":"module"}